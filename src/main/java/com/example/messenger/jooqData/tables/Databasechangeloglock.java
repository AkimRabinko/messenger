/*
 * This file is generated by jOOQ.
 */
package com.example.messenger.jooqData.tables;


import com.example.messenger.jooqData.Public;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.TableImpl;


@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Databasechangeloglock extends TableImpl<Record> {

    private static final long serialVersionUID = 90473056;

    public static final Databasechangeloglock DATABASECHANGELOGLOCK = new Databasechangeloglock();

    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    public final TableField<Record, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    public final TableField<Record, Boolean> LOCKED = createField("locked", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    public final TableField<Record, LocalDateTime> LOCKGRANTED = createField("lockgranted", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    public final TableField<Record, String> LOCKEDBY = createField("lockedby", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    public Databasechangeloglock() {
        this(DSL.name("databasechangeloglock"), null);
    }

    public Databasechangeloglock(String alias) {
        this(DSL.name(alias), DATABASECHANGELOGLOCK);
    }

    public Databasechangeloglock(Name alias) {
        this(alias, DATABASECHANGELOGLOCK);
    }

    private Databasechangeloglock(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private Databasechangeloglock(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Internal.createUniqueKey(com.example.messenger.jooqData.tables.Databasechangeloglock.DATABASECHANGELOGLOCK, "databasechangeloglock_pkey", com.example.messenger.jooqData.tables.Databasechangeloglock.DATABASECHANGELOGLOCK.ID);
    }

    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(
              Internal.createUniqueKey(com.example.messenger.jooqData.tables.Databasechangeloglock.DATABASECHANGELOGLOCK, "databasechangeloglock_pkey", com.example.messenger.jooqData.tables.Databasechangeloglock.DATABASECHANGELOGLOCK.ID)
        );
    }

    @Override
    public Databasechangeloglock as(String alias) {
        return new Databasechangeloglock(DSL.name(alias), this);
    }

    @Override
    public Databasechangeloglock as(Name alias) {
        return new Databasechangeloglock(alias, this);
    }

    @Override
    public Databasechangeloglock rename(String name) {
        return new Databasechangeloglock(DSL.name(name), null);
    }

    @Override
    public Databasechangeloglock rename(Name name) {
        return new Databasechangeloglock(name, null);
    }
}
